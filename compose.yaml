# version: "3.7"

services:
  redis:
    image: redis:alpine
    container_name: chani-redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - app-network

  backend:
    container_name: chani-backend
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    environment:
      - PORT=3001
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      - redis
    expose:
      - 3001
    networks:
      - app-network

  fe-user:
    container_name: "chani-fe-user"
    build:
      context: ./apps/client
      dockerfile: Dockerfile
    ports:
      - "4000:80"
    expose:
      - 80
    depends_on:
      - backend

  fe-admin:
    container_name: chani-fe-admin
    build:
      context: ./apps/admin
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    expose:
      - 3000
    depends_on:
      - backend

  nginx:
    container_name: chani-nginx-client
    image: nginx:alpine
    ports:
      - "80:80"
      # - "27018:27018" # Expose 27018 for MongoDB access
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

volumes:
  redis-data:
    name: redis-data
    driver: local
  mongodb-data:
    name: mongodb-data
    driver: local

networks:
  app-network:
    driver: bridge
