# version: "3.7"

services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 37017:27017
    volumes:
      - mongodb-data:/data/db

  backend:
    container_name: chani-backend
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - 3001:3001
      # - 3002:3002 # Websocket port
    environment:
      - PORT=3001
      - NODE_ENV=development
      # - POSTGRES_HOST=postgres
      # - POSTGRES_USER=${POSTGRES_USER}
      # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRES_DB=${POSTGRES_DB}
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
    # env_file:
    #   - ./server/.env
    depends_on:
      - redis
      - mongodb
    expose:
      - 3001

  fe-user:
    container_name: "chani-fe-user"
    build:
      context: ./apps/client
      dockerfile: Dockerfile
    ports:
      - "80:80"
    expose:
      - 80
    depends_on:
      - backend

  fe-admin:
    container_name: chani-fe-admin
    build:
      context: ./apps/admin
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    expose:
      - 3000
    depends_on:
      - backend

  nginx:
    container_name: chani-nginx
    image: nginx:alpine
    # ports:
    #   - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fe-user
      - backend
      # - fe-admin

volumes:
  redis-data:
    name: redis-data
    driver: local
  mongodb-data:
    name: mongodb-data
    driver: local
